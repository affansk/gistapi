{"version":3,"sources":["components/Search.js","components/Header.js","components/styles/styles.styled.js","components/GistList.js","GlobalStyle.js","slice/HomeSlice.js","App.js","services/api.js","sagas/homeSaga.js","sagas/rootSaga.js","store/index.js","index.js"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","InputBox","_templateObject2","Input","input","_templateObject3","Search","props","searchText","useContext","gistContext","_jsx","children","_jsxs","Octicon","name","placeholder","onChange","Header","mega","Container","InnerContainer","ContainerHeader","ContainerHeaderRight","_templateObject4","ContainerAvatarSec","_templateObject5","ContainerHeaderLeft","_templateObject6","Avatar","_templateObject7","AvatarName","p","_templateObject8","ContainerHeaderRightData","_templateObject9","ContainerCreatedSection","_templateObject10","ContainerCreated","_templateObject11","GenratedSection","_templateObject12","ContainerIcon","_templateObject13","_templateObject14","ContainerText","_templateObject15","FileSection","_templateObject16","InnerFileSection","_templateObject17","FileTags","_templateObject18","FileIcon","_templateObject19","CenteredParagraph","_templateObject20","GistList","sText","filterObjectLength","gist","isLoading","isError","getFormattedDate","useMemo","dateS","date","Date","concat","getMonth","getDate","getFullYear","renderFileSection","item","files","Object","entries","map","_ref","_ref2","_slicedToArray","key","value","small","style","color","rel","target","href","raw_url","renderContaineHeaderRight","_item$owner","keys","length","forks_url","comments_url","owner","starred_url","index","created_at","updated_at","src","avatar_url","alt","login","description","GlobalStyles","createGlobalStyle","initialState","gistLoading","gistData","undefined","gistError","homeSlice","createSlice","reducers","getGist","state","gistSuccess","data","payload","gistFailed","_homeSlice$actions","actions","createContext","GistLocalReducer","prevState","action","type","_objectSpread","gistList","filterGist","localInitialState","App","dispatch","useDispatch","_useReducer","useReducer","_useReducer2","localState","dispatcher","useSelector","home","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","memoizeHeader","memoizeGistList","searchTextGist","useCallback","event","text","trim","toLowerCase","getFilteredData","filterByName","object","filter","includes","Provider","className","octokit","Octokit","response","request","headers","sent","abrupt","gistAction","_marked2","homeSaga","call","status","put","message","_marked","_context2","takeLatest","rootSaga","spawn","saga","createSagaMiddleware","middleware","store","configureStore","reducer","homeReducer","getDefaultMiddleware","run","ReactDOM","render","React","StrictMode","ReduxProvider","document","getElementById"],"mappings":"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","file":"static/js/main.63a9ff1a.chunk.js","sourcesContent":["import React,{useContext} from 'react'\nimport styled from 'styled-components'\nimport Octicon from 'react-octicon'\nimport { gistContext } from '../App';\nconst Search = (props) => {\n  const gistAppContext = useContext(gistContext);\n  const {searchText} = gistAppContext;\n  return (\n    <Wrapper>\n      <InputBox>\n      <Octicon name=\"search\" />\n      <Input placeholder=\"Search Gists for the username\" onChange={searchText}/>\n      </InputBox>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  padding: 8px;\n  background-color: #ffffff;\n  font-size: 14px;\n  line-height: 1.5;\n  border-radius: 6px;\n  margin: 0 16px;\n`;\n\nconst InputBox = styled.div`\n  border-radius: 4px;\n  display: flex;\n  width: 400px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  width: 100%;\n  font-size: 16px;\n\n  &:focus{\n    outline: 0;\n  }\n`;\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\nimport Octicon from 'react-octicon'\nimport Search from './Search';\n\nfunction Header() {\n  return (\n    <Wrapper>\n      <Octicon name=\"mark-github\" mega/>\n      <Search />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  background-color: #24292e;\n  color: #ffffff;\n  z-index: 32;\n  padding: 16px;\n  font-size: 14px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n`;\n\nexport default Header\n","\nimport styled from 'styled-components';\nexport const Container = styled.div`\n  width:50%;\n  font-size: 14px;\n  line-height: 1.5;\n  margin: 0 auto;\n`;\n\nexport const InnerContainer = styled.div`\npadding-top: 20px;\npadding-bottom: 20px;\nborder-bottom:2px solid #f5f5f6;\n`\nexport const ContainerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items:center;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\nexport const ContainerHeaderRight = styled.div`\nfloat:left\n\ndisplay: flex;\n  flex-direction: row;\n`\nexport const ContainerAvatarSec = styled.div`\ndisplay: flex;\nflex-direction: row;\n`\nexport const ContainerHeaderLeft = styled.div`\nborder-bottom:1px solid red\nfloat:left;\n`\n\nexport const Avatar = styled.div`\n    width: 50px;\n  height: 50px;\n  background-color: red;\n  border-radius: 50%;\n  margin-right:10px;\n\n  img {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n  }\n`\nexport const AvatarName = styled.p`\n\n`\nexport const ContainerHeaderRightData = styled.div`\ndisplay: flex;\n  flex-direction: row;\n  align-items:center;\n  float:left;\n  justify-content: center;\n  margin-left:15px\n`\n\nexport const ContainerCreatedSection = styled.div`\nmargin-top:10px;\ndisplay: flex;\n  flex-direction: row;\n`\nexport const ContainerCreated = styled.div`\nmargin-Right:10px;\n`\nexport const GenratedSection = styled.div`\nmargin-top:10px;\n`\nexport const AvatarImg = styled.div`\n// width: 50px;\n//   height: 50px;\n`\nexport const ContainerIcon = styled.div`\njustify-content: center;\nalign-items:center;\n`\nexport const ContainerText = styled.div`\nmargin-left:5px;\n\np a {\n    text-decoration-line : none;\n    font-size:13px;\n  }\n`\nexport const FileSection = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items:center;\nmax-width:100%;\nflex-wrap:wrap;\n`\nexport const InnerFileSection = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items:center;\nflex-wrap:wrap\n`\nexport const FileTags = styled.div`\ndisplay: flex;\n  flex-direction: row;\n    margin-left:10px;\n    margin-right:6px;\n  p a {\n    text-decoration-line : none;\n    font-size:13px;\n  }\n`\n\nexport const FileIcon = styled.div`\ndisplay: flex;\nflex-direction: row;\n`\n\nexport const CenteredParagraph = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n","import React, { useMemo } from 'react'\n\nimport { CenteredParagraph, FileTags, FileIcon, InnerFileSection, FileSection, GenratedSection, ContainerCreated, ContainerCreatedSection, Avatar, ContainerHeaderRight, ContainerIcon, ContainerText, ContainerHeaderRightData, InnerContainer, Container, ContainerHeader, ContainerHeaderLeft, ContainerAvatarSec, AvatarName } from '../components/styles/styles.styled'\nimport Octicon from 'react-octicon';\nimport PropTypes from 'prop-types';\n\n\nconst GistList = (props) => {\n    // This component will receave all needed props. \n    const { sText, filterObjectLength, gist, isLoading, isError } = props;\n    /* \n    This Functions format the date with function memoization\n    input : This FUnctions Take Date Receive from API \n    Output : This Function Outpit the formatted Date.\n    */\n    const getFormattedDate = useMemo(\n        () => (dateS) => {\n            const dateString = dateS;\n            const date = new Date(dateString);\n            return `${date.getMonth() + 1}/${date.getDate() - 1}/${date.getFullYear()}`;\n        },\n        []\n    );\n\n    /* \n    We have Seperated The Ui for Readibilty\n    input : This FUnctions Take item as parameter, because some of the value is dependend on API resonse\n    Output : This FUnction Render Section with contant all user files\n    */\n    const renderFileSection = (item) => {\n        return (\n            <FileSection>\n                {item?.files && Object.entries(item?.files).map(([key, value]) => {\n                    return (\n                        <InnerFileSection key={`${key}-${value}`}>\n\n                            <FileIcon>\n                                <Octicon name=\"file\" small='true' style={{ color: '#2974da' }} />\n                            </FileIcon>\n                            <FileTags>\n                                <p> <a style={{ color: '#2974da' }} rel=\"noreferrer\" key={key} target='_blank' href={value?.raw_url}>{key}</a></p>\n                            </FileTags>\n\n\n                        </InnerFileSection>\n                    )\n                })}\n            </FileSection>\n        )\n    }\n    /* \n   We have Seperated The Ui for Readibilty\n   input : This FUnctions Take item as parameter, because some of the value is dependend on API resonse\n   Output : This FUnction Render Section with contant like fork, comments, etc.\n   */\n    const renderContaineHeaderRight = (item) => {\n        return (\n            <ContainerHeaderRight>\n                <ContainerHeaderRightData>\n                    <ContainerIcon>\n                        <Octicon name=\"code\" small='true' style={{ color: '#2974da' }} />\n                    </ContainerIcon>\n                    <ContainerText>\n                        <p> <a rel=\"noreferrer\" key={'#'} href={'/'} style={{ color: '#2974da' }}>\n                            {item?.files ? `${Object.keys(item.files).length} Files` : 'No files'}\n                        </a></p>\n                    </ContainerText>\n                </ContainerHeaderRightData>\n                <ContainerHeaderRightData>\n                    <ContainerIcon>\n                        <Octicon name=\"repo-forked\" small='true' style={{ color: '#2974da' }} />\n                    </ContainerIcon>\n                    <ContainerText>\n                        <p> <a rel=\"noreferrer\" key={'#'} target='_blank' href={item?.forks_url} style={{ color: '#2974da' }}>Forks</a></p>\n                    </ContainerText>\n                </ContainerHeaderRightData>\n                <ContainerHeaderRightData>\n                    <ContainerIcon>\n                        <Octicon name=\"comment\" small='true' style={{ color: '#2974da' }} />\n                    </ContainerIcon>\n                    <ContainerText>\n                        <p> <a rel=\"noreferrer\" key={'#'} target='_blank' href={item?.comments_url} style={{ color: '#2974da' }}>Comments</a></p>\n                    </ContainerText>\n                </ContainerHeaderRightData>\n                <ContainerHeaderRightData>\n                    <ContainerIcon>\n                        <Octicon name=\"star\" small='true' style={{ color: '#2974da' }} />\n                    </ContainerIcon>\n                    <ContainerText>\n                        <p> <a rel=\"noreferrer\" key={'#'} target='_blank' href={item?.owner?.starred_url} style={{ color: '#2974da' }}>Stars</a></p>\n                    </ContainerText>\n                </ContainerHeaderRightData>\n\n\n            </ContainerHeaderRight>\n        )\n    }\n\n\n    return (\n        <Container>\n\n            {\n                isLoading ? <CenteredParagraph>Gist Loading..</CenteredParagraph>\n                    :\n                    !isLoading && isError ?\n                        <CenteredParagraph>Some Problem in Loading Data</CenteredParagraph>\n                        : sText?.length > 0 && filterObjectLength === 0 ?\n                            <CenteredParagraph>No Data Found!</CenteredParagraph>\n                            :\n                            gist?.map((item, index) => {\n                                const { owner, created_at, updated_at } = item;\n                                return (\n                                    <InnerContainer key={index}>\n                                        <ContainerHeader>\n                                            <ContainerHeaderLeft>\n                                                <ContainerAvatarSec>\n                                                    <Avatar>\n                                                        <img src={owner?.avatar_url} alt={owner?.login} />\n                                                    </Avatar>\n                                                    <AvatarName>\n                                                        {owner?.login}\n                                                    </AvatarName>\n                                                </ContainerAvatarSec>\n\n                                            </ContainerHeaderLeft>\n                                            {renderContaineHeaderRight(item)}\n                                        </ContainerHeader>\n                                        <ContainerCreatedSection>\n                                            <ContainerCreated>\n                                                {`Created at: ${getFormattedDate(created_at)}`}\n                                            </ContainerCreated>\n                                            <ContainerCreated>\n                                                {`Updated at: ${getFormattedDate(updated_at)}`}\n                                            </ContainerCreated>\n                                        </ContainerCreatedSection>\n                                        <GenratedSection>\n                                            {`${item?.description}`}\n                                        </GenratedSection>\n                                        {renderFileSection(item)}\n                                    </InnerContainer>\n                                )\n                            }\n                            )}\n\n        </Container>\n    )\n}\n\n// This Is for Type Checking of Props/Params. it will allow those which is part of this propstype\nGistList.propTypes = {\n    sText: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    filterObjectLength: PropTypes.number.isRequired,\n    gist: PropTypes.array,\n    isError: PropTypes.bool\n};\n\n\nexport default GistList\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body{\n    margin: 0;\n    font-family: Helvetica Neue,Helvetica,Segoe UI,Arial,freesans,sans-serif;\n    color: #626465;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyles;\n","import { createSlice } from '@reduxjs/toolkit';\n export var initialState ={\n    gistLoading : false,\n    gistData : undefined,\n    gistError : undefined\n}\n\nexport const homeSlice = createSlice({\n    name: 'home',\n    initialState,\n    reducers: {\n        getGist: state => {\n            state.gistLoading = true;\n        },\n        gistSuccess: (state, data) => {\n            state.gistLoading = false;\n            state.gistData = data?.payload;\n        },\n        gistFailed: (state, data) => {\n            state.gistLoading = false;\n            state.gistError = data?.payload;\n        },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n    getGist,\n    gistSuccess,\n    gistFailed,\n} = homeSlice.actions;\n\nexport default homeSlice.reducer;","import React, { createContext, useEffect, useMemo, useCallback, useReducer } from 'react';\nimport styled from 'styled-components'\nimport Header from \"./components/Header\";\nimport GistList from \"./components/GistList\";\nimport GlobalStyles from \"./GlobalStyle\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGist } from './slice/HomeSlice'\nexport const gistContext = createContext(null);\n\n\n/* I am using Local useReducer, as it is better approach then useState, when you have multiple States on Scree. as it makes code very clean */\n\nconst GistLocalReducer = (prevState, action) => {\n  switch (action.type) {\n    case 'setGistList':\n      return {\n        ...prevState,\n        gistList: action.payload,\n      };\n    case 'setFilterGist':\n      return {\n        ...prevState,\n        filterGist: action.payload,\n      };\n    case 'setSText':\n      return {\n        ...prevState,\n        sText: action.payload,\n      };\n    default:\n      break;\n  }\n};\n\nconst localInitialState = {\n  gistList: [],\n  filterGist: [],\n  sText: '',\n};\n\n/* We have use useMemo and useCallback for Optimization, we could also have use lazy loading and supension for controlling components, but it is not asked here to do*/\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [localState, dispatcher] = useReducer(GistLocalReducer, localInitialState);\n  const { gistList, filterGist, sText } = localState;\n  const gist = useSelector(state => state?.home); // this is redux selector to catch data globally within the app\n  const { gistLoading, gistError } = gist;\n  /*\n  * This useEffect Hooks call Data fronm API\n  * Input: get method to call api\n  * Output: it will return array of object from api response\n  */\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(\n        getGist()\n      );\n    };\n    fetchData()\n  }, [dispatch]);\n\n\n  /*\n * This useEffect Hooks set gist List in State, so we an filter data for later use without calling API Again\n * Input: Gist Data comes from API and then we set the state\n * Output: will set the state for later use\n */\n\n  useEffect(() => {\n    if (gist?.gistData !== undefined) {\n      dispatcher({ type: 'setGistList', payload: gist?.gistData });\n    }\n  }, [gist]);\n\n  /*\n * This useMemo Hooks use to avoid re render of component for better performance\n * Input: use component inside usememo, and when required we can pass dependency, whenever we want to update this component based on event\n * Output: will give memoize format of component\n */\n\n  const memoizeHeader = useMemo(() => {\n    return (\n      <Header />\n    );\n  }, []);\n\n  /*\n* This useMemo Hooks use to avoid re render of component for better performance, it will only re render when list of data changes\n* Input: use component inside usememo, and when required we can pass dependency, whenever we want to update this component based on event\n* Output: will give memoize format of component\n*/\n\n  const memoizeGistList = useMemo(() => {\n    return (\n      <GistList gist={filterGist.length > 0 ? filterGist : gistList} filterObjectLength={filterGist?.length} isLoading={gistLoading} sText={sText} isError={gistError ? true : false} />\n    );\n  }, [gistList, filterGist, gistLoading, sText, gistError]);\n\n  /*\n* This Method is using useCallback and getting called from search Component via context\n* Input: will take input\n* Output: will filter out the list by name\n*/\n  const searchTextGist = useCallback((event) => {\n    const text = event.target.value.trim().toLowerCase();\n    dispatcher({ type: 'setSText', payload: text }); // setSText(text);\n    const getFilteredData = filterByName(gistList, text);\n    dispatcher({ type: 'setFilterGist', payload: getFilteredData }); //setFilterGist(getFilteredData);\n  }, [gistList]);\n\n  /*\n* This Method is using useCallback and getting called from searchText Method, it will filter the list by name and show you those details.\n* Input: will take Text as Input\n* Output: will filter out the list by name\n*/\n  const filterByName = (object, text) => {\n    return object.filter(item => {\n      const { owner } = item;\n      return owner?.login.toLowerCase().includes(text);\n    });\n  }\n\n\n  // From Here it starts the main jsx where you return the View\n  // i am using context hook to pass function refrence to deep down component. so i dont need to create hierrachy by passing ref function to parent\n  return (\n    <gistContext.Provider value={{\n      searchText: searchTextGist\n    }}>\n      <Wrapper className=\"App\" data-testid=\"app\">\n        <GlobalStyles />\n        {memoizeHeader}\n        {memoizeGistList}\n      </Wrapper>\n    </gistContext.Provider>\n  );\n}\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport default App;\n","import { Octokit } from \"@octokit/rest\";\n\n\nconst octokit = new Octokit();\n\n\nexport const gist = async () => {\n  const response = await octokit.request('GET /gists/public', {\n    headers: {\n      'X-GitHub-Api-Version': '2022-11-28'\n    }\n  })\n  return response\n}\n\n\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { gist } from '../services/index';\n\nimport {\n  gistSuccess,\n  gistFailed,\n} from '../slice/HomeSlice';\n\nfunction* gistAction(action) {\n  const response = yield call(gist);\n  const { status} = response || {};\n  if (status === 200) {\n    yield put(gistSuccess(response?.data));\n  } else {\n    yield put(gistFailed({message:'someething Wrong with response. Please Try Again!'})); // Here we can display dynamic error reponse from API. just ned to replace message with dyanmic message from api.\n  }\n\n}\nfunction* homeSaga() {\n  yield takeLatest('home/getGist', gistAction);\n}\n\nexport default homeSaga;\n","import {spawn} from 'redux-saga/effects';\nimport homeSaga from './homeSaga';\nexport default function* rootSaga() {\n  yield spawn(homeSaga);;\n}\n","import {configureStore} from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport homeReducer from '../slice/HomeSlice';\nimport {rootSaga} from '../sagas';\n\nconst saga = createSagaMiddleware();\nconst middleware = [saga]\nexport const store = configureStore({\n  reducer: {\n    home: homeReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware().concat(middleware),\n});\n\nsaga.run(rootSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store';\nimport { Provider as ReduxProvider } from 'react-redux';\nReactDOM.render(\n\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}